version: "3"

volumes:
  postgres_data:
      driver: local
  orders-db:
  products-db:




services:  

  postgres:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
  keycloak:
      image: quay.io/keycloak/keycloak:legacy
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        #KEYCLOAK_USER: admin
        #KEYCLOAK_PASSWORD: Pa55w0rd
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      ports:
        - 8080:8080
      depends_on:
        - postgres
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "8000:80"
    networks:
      - products
  

  products_db:
    container_name: products_db
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: products_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - '3310:3306'
    expose:
      # Opens port 3306 on the container
      - '3310'
      # Where our data will be persisted
    volumes:
      - ./data2/products-db:/var/lib/mysql

 


  orders_db: 
    image: mysql
    ports: 
      - "3308:3306"
    expose:
      # Opens port 3306 on the container
      - 3308
    container_name: orders_db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: order_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin 
    volumes:
      - ./data2/orders-db:/var/lib/mysql   

  

  product-service:
    build:
      context: ./backend/product_service
    container_name: product_service
    command: npm start
    restart: always
    ports:
      - "5101:5101"
    environment:
      - PORT=5101
    networks:
      - products

  order-service:
    build:
      context: ./backend/order_service
    container_name: order_service
    command: npm start
    restart: always
    ports:
      - "5050:5050"
    environment:
      - PORT=5050
    networks:
      - products


networks:
  products:
    driver: bridge